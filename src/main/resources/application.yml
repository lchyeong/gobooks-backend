spring:
  jpa:
    properties:
      hibernate.hibernate.default_batch_fetch_size: 100
    open-in-view: false
    hibernate:
      ddl-auto: none
  servlet:
    multipart:
      enabled: true
      location: C:\\upload
      max-request-size: 30MB
      max-file-size: 10MB
  mail:
    host: smtp.gmail.com
    port: 587
    username: chany9119@gmail.com
    password: bgbdcvyrvvygwyub
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

logging:
  config: classpath:logback-${spring.profiles.active}.xml

spring.config.import: classpath:application-jwt.yml,classpath:application-discord.yml,classpath:application-oauth2.yml
---
spring.config.activate.on-profile: local
spring:
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:core;MODE=MySQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        format_sql: true
    show-sql: true
    defer-datasource-initialization: true  #data.sql 파일의 실행이 DB가 연결되고 난 이후에 실행되도록 설정

  h2:
    console:
      enabled: true # /h2-console 설정
#    datasource:
#      url: jdbc:h2:mem:testdb

logging:
  discord:
    webhook-uri-local: ${DISCORD_WEBHOOK_LOCAL_URL}
  # hibernate에 바인딩된 값을 콘솔에서 보기위한 설정
  level:
    org.springframework.context: DEBUG
    org.hibernate.sql: debug
    org.hibernate.orm.jdbc.bind: trace

---
spring.config.import: classpath:application-db.yml
spring.config.activate.on-profile: dev
spring:
  datasource:
    hikari:
      connection-timeout: 5000
      maximum-pool-size: 5
      keepalive-time: 30000
      validation-timeout: 1000
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/${database.name}?serverTimezone=UTC&characterEncoding=UTF-8
    username: ${database.username}
    password: ${database.password}
  sql: # mysql에서는 data.sql를 빌드시 실행하려면 추가해야됨.
    init:
      mode: always
  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        format_sql: true
    show-sql: true
    defer-datasource-initialization: true #data.sql 파일의 실행이 DB가 연결되고 난 이후에 실행되도록 설정

logging:
  discord:
    webhook-uri-dev: ${DISCORD_WEBHOOK_DEV_URL}
  # hibernate에 바인딩된 값을 콘솔에서 보기위한 설정
  level:
    org.springframework.context: DEBUG
    org.hibernate.sql: debug
    org.hibernate.orm.jdbc.bind: trace
springdoc:
  swagger-ui:
    enabled:







